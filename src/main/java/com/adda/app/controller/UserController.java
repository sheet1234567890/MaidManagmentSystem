package com.adda.app.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.adda.app.Entity.User;
import com.adda.app.Service.userService;
import com.adda.app.jwtutil.JwtUtils;
import com.adda.app.payload.UserRequest;
import com.adda.app.payload.UserResponse;
@CrossOrigin
@RestController
@RequestMapping("/auth")
public class UserController {
    @Autowired
	private AuthenticationManager authenticationmanger;
    @Autowired
    private userService service;
    @Autowired
    private JwtUtils jwtutil;
	
    @PostMapping("/save")
    public ResponseEntity<User> saveUser(@RequestBody User user)
    {
    	return new ResponseEntity<User>(this.service.SaveUser(user),HttpStatus.CREATED);
    }
    @GetMapping("/get")
    public ResponseEntity<List<User>> getAllUser()
    {
    	return new ResponseEntity<List<User>>(this.service.getAllUser(),HttpStatus.OK);
    }
    @GetMapping("/{id}")
    public ResponseEntity<User> getUserbyId(@PathVariable Long id)
    {
    	return new ResponseEntity<User> (this.service.getOneUserById(id),HttpStatus.OK);
    }
    @GetMapping("/current-user")
    public ResponseEntity<User> getCurrentuser(Principal p)
    {
    	return new ResponseEntity<User>(this.service.getCurrentUser(p.getName()),HttpStatus.OK);
    }
    @PostMapping("/login")
    public ResponseEntity<UserResponse> login(@RequestBody UserRequest userrequest)
    {
    	System.out.println("..."+userrequest.getEmail()+"..."+userrequest.getPassword());
    	
    	authenticationmanger.authenticate(new UsernamePasswordAuthenticationToken(userrequest.getEmail(), userrequest.getPassword()));
    	System.out.println("....");
    	String token = jwtutil.generateToken(userrequest.getEmail());
    	return ResponseEntity.ok(new UserResponse(token, "generated by sheet...."));
    }
}
